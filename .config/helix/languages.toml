## TOML
[[language]]
name = "toml"
scope = "source.toml"
injection-regex = "toml"
file-types = ["toml", "poetry.lock", "Cargo.lock"]
roots = []
comment-token = "#"
# TODO: uncomment after merging https://github.com/tamasfe/taplo/pull/354
# language-server = { command= "taplo", args = ["lsp", "stdio"] }
language-server = { command = "" }
indent = { tab-width = 2, unit = "  " }
auto-format = true
formatter = { command = 'taplo', args = ['format', '-'] }


# Javascript
[[language]]
name = "javascript"
formatter = { command = "prettierd", args = ["stdin"] }
auto-format = true


## Python
[[language]]
name = "python"
scope = "source.python"
injection-regex = "python"
auto-format = true
file-types = [
  "py",
  "pyi",
  "py3",
  "pyw",
  "ptl",
  ".pythonstartup",
  ".pythonrc",
  "SConstruct",
]
shebangs = ["python"]
roots = ["pyproject.toml", "setup.py", "Poetry.lock", "requirements.txt"]
comment-token = "#"
language-server = { command = "pyright-langserver", args = ["--stdio"] }
config = {} # require for pyright lsp
formatter = { command = "black", args = ["--quiet", "-"] }


## Rust 
[[language]]
name = "rust"
auto-format = true
config = { checkOnSave = { command = "clippy" } }
scope = "source.rust"
injection-regex = "rust"
file-types = ["rs"]
roots = ["Cargo.toml", "Cargo.lock"]
comment-token = "//"
language-server = { command = "rust-analyzer" }
indent = { tab-width = 4, unit = "    " }

[language-server.rust-analyzer.config.check]
command = "clippy"

[language.debugger]
name = "lldb-vscode"
transport = "stdio"
command = "lldb-vscode"

[[language.debugger.templates]]
name = "binary"
request = "launch"
completion = [{ name = "binary", completion = "filename" }]
args = { program = "{0}" }

[[language.debugger.templates]]
name = "binary (terminal)"
request = "launch"
completion = [{ name = "binary", completion = "filename" }]
args = { program = "{0}", runInTerminal = true }

[[language.debugger.templates]]
name = "attach"
request = "attach"
completion = ["pid"]
args = { pid = "{0}" }
[[language.debugger.templates]]
name = "gdbserver attach"
request = "attach"
completion = [
  { name = "lldb connect url", default = "connect://localhost:3333" },
  { name = "file", completion = "filename" },
  "pid",
]
args = { attachCommands = [
  "platform select remote-gdb-server",
  "platform connect {0}",
  "file {1}",
  "attach {2}",
] }


# Bash
[[language]]
name = "bash"
indent = { tab-width = 4, unit = "    " }
formatter = { command = 'shfmt', args = ["-i", "4"] }
auto-format = true
